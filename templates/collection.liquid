<div id="col-main" class="{{ collection.handle }}">

    <header class="section-details clearfix">
      <h2 class="section-title">{{ collection.title }}</h2>
      {% if collection.description != empty %}
        <div class="description content">{{ collection.description }}</div>
      {% endif %}
    </header>


    <div class='options'>
      <ul class='option-set' id='sort-filters' data-option-key='sortBy'>
        <li><a href='#sort-filters' class='option-value' data-option-value='percent'>Percent</a></li>
        <li><a href='#sort-filters' class='option-value' data-option-value='popularity'>Popularity</a></li>
      </ul>
      <ul class='option-set' id='batch-filters' data-option-key='filter'>
        <li><a href='#batch-filters' class='option-value' data-option-value='.small-batch'>Small-batch</a></li>
        <li><a href='#batch-filters' class='option-value' data-option-value='.large-batch'>Large-batch</a></li>
      </ul>
      <ul class='option-set' id='region-filters' data-option-key='filter'>
        <li><a href='#region-filters' class='option-value' data-option-value='.NE'>Northeast</a></li>
        <li><a href='#region-filters' class='option-value' data-option-value='.SE'>Southeast</a></li>
        <li><a href='#region-filters'class='option-value' data-option-value='.NW'>Northwest</a></li>
        <li><a href='#region-filters'class='option-value' data-option-value='.SW'>Southwest</a></li>
        <li><a href='#region-filters' class='option-value' data-option-value='.MW'>Midwest</a></li>
      </ul>
    </div>


    <div id='house-filter row'>
      <div id='filter-1'></div> Artisan
      <div id='filter-4'></div> Percent
    </div>

    {% paginate collection.products by 100 %}
      {% if collection.products.size > 0 %}
    
        <div class="product-grid clearfix isotope">
          {% for product in collection.products %}
            <div class='item {{ product.metafields.image.orientation }} {% for tag in product.tags %} {{tag}} {% endfor %}'>
              {% include 'product-grid-item' %}
            </div>
          {% endfor %}
        </div>

        {% include 'pagination' %}
      
      {% else %}    
        <strong>No products found in this collection.</strong>
      {% endif %}
    {% endpaginate %}
  </section>
  
</div> <!-- /#col-main -->

<script type="text/javascript">
  $(function(){
    $('.product-grid').isotope({
      itemSelector :'.item',
      masonry: {
        columnWidth: 1
      },
      getSortData : {
        percent : function ( $elem ) {
          return $elem.attr('data-percent');
        }
      }
    });
  });

  $('.product-grid-item').hover(function(){
    console.log('firing hover')
    var prod_handle = $(this)[0].getAttribute('data-product');
    var prod_url = $(this)[0].getAttribute('data-url');
    var $item_holder = $(this)

    $item_holder.css('background-color', 'black');
    $item_holder.css('opacity', 0.3)
    $item_holder.html('<span style="position:absolute;padding-top:'+$item_holder.height()/2+'px;padding-left:'+$item_holder.width()/2+'px;left:-15px;top:-15px;"><a href="'+prod_url+'?quantity=5">{{ "fancy_close.png" | asset_url | img_tag }}</a></span>')
  }).mouseleave(function(){
      $(this).css('background-color', 'black');
      $(this).css('opacity', 1)
      $(this).html('') //destroys product right now
  })

  // if a filter is clicked
  // register which filters are active
  // make sure whatever product is on the page has that tag
  // repopulate page and masonry-ize it

  $option_values = $('.options a')
  var options_hash = new HashTable();
  var filters = [];

  // if any of the filters are clicked
  $option_values.click(function(){ 
    // find out if it's a filter or a sorter
    $option_key = $(this).parent()

    // if it's already been clicked, unselect it and remove it from the Hash
    if($(this).hasClass('selected')){
      $(this).removeClass('selected');
      if ($(this).attr('data-option-value'));

      options_has.removeItem($(this).attr('data-option-value'))
    }
    else { // if it hasn't been clicked, select it and add it to the Hash

    }

    // run the filter/sorter and reload the grid
    $('product-grid').isotope{ options_hash }
  })

  //Classes

  function HashTable(obj)
  {
    this.length = 0;
    this.items = {};
    for (var p in obj) {
        if (obj.hasOwnProperty(p)) {
            this.items[p] = obj[p];
            this.length++;
        }
    }

    this.setItem = function(key, value)
    {
        var previous = undefined;
        if (this.hasItem(key)) {
            previous = this.items[key];
        }
        else {
            this.length++;
        }
        this.items[key] = value;
        return previous;
    }

    this.getItem = function(key) {
        return this.hasItem(key) ? this.items[key] : undefined;
    }

    this.hasItem = function(key)
    {
        return this.items.hasOwnProperty(key);
    }
   
    this.removeItem = function(key)
    {
        if (this.hasItem(key)) {
            previous = this.items[key];
            this.length--;
            delete this.items[key];
            return previous;
        }
        else {
            return undefined;
        }
    }

    this.keys = function()
    {
        var keys = [];
        for (var k in this.items) {
            if (this.hasItem(k)) {
                keys.push(k);
            }
        }
        return keys;
    }

    this.values = function()
    {
        var values = [];
        for (var k in this.items) {
            if (this.hasItem(k)) {
                values.push(this.items[k]);
            }
        }
        return values;
    }

    this.each = function(fn) {
        for (var k in this.items) {
            if (this.hasItem(k)) {
                fn(k, this.items[k]);
            }
        }
    }

    this.clear = function()
    {
        this.items = {}
        this.length = 0;
    }
  }

  })  
</script>